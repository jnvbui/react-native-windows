// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v1.0.190111.3

#pragma once

#include "winrt/base.h"

static_assert(
    winrt::check_version(CPPWINRT_VERSION, "1.0.190111.3"),
    "Mismatched component and base headers.");
#include "winrt/Windows.Foundation.Collections.h"
#include "winrt/Windows.Foundation.h"
#include "winrt/impl/Microsoft.UI.Xaml.Core.Direct.2.h"
#include "winrt/impl/Windows.UI.2.h"
#include "winrt/impl/Windows.UI.Xaml.2.h"
#include "winrt/impl/Windows.UI.Xaml.Media.2.h"
#include "winrt/impl/Windows.UI.Xaml.Media.Media3D.2.h"

namespace winrt::impl {

template <typename D>
bool consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::IsXamlDirectEnabled()
    const {
  bool __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->get_IsXamlDirectEnabled(&__returnValue));
  return __returnValue;
}

template <typename D>
Windows::Foundation::IInspectable
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetObject(
    Windows::Foundation::IInspectable const &xamlDirectObject) const {
  Windows::Foundation::IInspectable __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->GetObject(get_abi(xamlDirectObject), put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::IInspectable
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetXamlDirectObject(
    Windows::Foundation::IInspectable const &object) const {
  Windows::Foundation::IInspectable __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->GetXamlDirectObject(get_abi(object), put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::IInspectable
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::CreateInstance(
    Microsoft::UI::Xaml::Core::Direct::XamlTypeIndex const &typeIndex) const {
  Windows::Foundation::IInspectable __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->CreateInstance(get_abi(typeIndex), put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetObjectProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::Foundation::IInspectable const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetObjectProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    SetXamlDirectObjectProperty(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const
            &propertyIndex,
        Windows::Foundation::IInspectable const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetXamlDirectObjectProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetBooleanProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    bool value) const {
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->SetBooleanProperty(
              get_abi(xamlDirectObject), get_abi(propertyIndex), value));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetDoubleProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    double value) const {
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->SetDoubleProperty(
              get_abi(xamlDirectObject), get_abi(propertyIndex), value));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetInt32Property(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    int32_t value) const {
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->SetInt32Property(
              get_abi(xamlDirectObject), get_abi(propertyIndex), value));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetStringProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    param::hstring const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetStringProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetDateTimeProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::Foundation::DateTime const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetDateTimeProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetPointProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::Foundation::Point const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetPointProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetRectProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::Foundation::Rect const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetRectProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetSizeProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::Foundation::Size const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetSizeProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetTimeSpanProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::Foundation::TimeSpan const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetTimeSpanProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetColorProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::UI::Color const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetColorProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    SetCornerRadiusProperty(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const
            &propertyIndex,
        Windows::UI::Xaml::CornerRadius const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetCornerRadiusProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetDurationProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::UI::Xaml::Duration const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetDurationProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    SetGridLengthProperty(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const
            &propertyIndex,
        Windows::UI::Xaml::GridLength const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetGridLengthProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetThicknessProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::UI::Xaml::Thickness const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetThicknessProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetMatrixProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::UI::Xaml::Media::Matrix const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetMatrixProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetMatrix3DProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    Windows::UI::Xaml::Media::Media3D::Matrix3D const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->SetMatrix3DProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::SetEnumProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex,
    uint32_t value) const {
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->SetEnumProperty(
              get_abi(xamlDirectObject), get_abi(propertyIndex), value));
}

template <typename D>
Windows::Foundation::IInspectable
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetObjectProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::Foundation::IInspectable __returnValue{nullptr};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetObjectProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::IInspectable
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    GetXamlDirectObjectProperty(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const
            &propertyIndex) const {
  Windows::Foundation::IInspectable __returnValue{nullptr};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetXamlDirectObjectProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
bool consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetBooleanProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  bool __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetBooleanProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        &__returnValue));
  return __returnValue;
}

template <typename D>
double consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetDoubleProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  double __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetDoubleProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        &__returnValue));
  return __returnValue;
}

template <typename D>
int32_t consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetInt32Property(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  int32_t __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetInt32Property(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        &__returnValue));
  return __returnValue;
}

template <typename D>
hstring consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetStringProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  hstring __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetStringProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::DateTime
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetDateTimeProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::Foundation::DateTime __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetDateTimeProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::Point
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetPointProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::Foundation::Point __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetPointProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::Rect
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetRectProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::Foundation::Rect __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetRectProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::Size
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetSizeProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::Foundation::Size __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetSizeProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::Foundation::TimeSpan
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetTimeSpanProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::Foundation::TimeSpan __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetTimeSpanProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Color
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetColorProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Color __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetColorProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Xaml::CornerRadius
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetCornerRadiusProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Xaml::CornerRadius __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetCornerRadiusProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Xaml::Duration
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetDurationProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Xaml::Duration __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetDurationProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Xaml::GridLength
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetGridLengthProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Xaml::GridLength __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetGridLengthProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Xaml::Thickness
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetThicknessProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Xaml::Thickness __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetThicknessProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Xaml::Media::Matrix
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetMatrixProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Xaml::Media::Matrix __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetMatrixProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Windows::UI::Xaml::Media::Media3D::Matrix3D
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetMatrix3DProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  Windows::UI::Xaml::Media::Media3D::Matrix3D __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetMatrix3DProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
uint32_t consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetEnumProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  uint32_t __returnValue{};
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->GetEnumProperty(
                        get_abi(xamlDirectObject),
                        get_abi(propertyIndex),
                        &__returnValue));
  return __returnValue;
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::ClearProperty(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &propertyIndex)
    const {
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->ClearProperty(get_abi(xamlDirectObject), get_abi(propertyIndex)));
}

template <typename D>
uint32_t
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::GetCollectionCount(
    Windows::Foundation::IInspectable const &xamlDirectObject) const {
  uint32_t __returnValue{};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->GetCollectionCount(get_abi(xamlDirectObject), &__returnValue));
  return __returnValue;
}

template <typename D>
Windows::Foundation::IInspectable
consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    GetXamlDirectObjectFromCollectionAt(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        uint32_t index) const {
  Windows::Foundation::IInspectable __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->GetXamlDirectObjectFromCollectionAt(
              get_abi(xamlDirectObject), index, put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::AddToCollection(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Windows::Foundation::IInspectable const &value) const {
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->AddToCollection(get_abi(xamlDirectObject), get_abi(value)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    InsertIntoCollectionAt(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        uint32_t index,
        Windows::Foundation::IInspectable const &value) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->InsertIntoCollectionAt(
                        get_abi(xamlDirectObject), index, get_abi(value)));
}

template <typename D>
bool consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::RemoveFromCollection(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Windows::Foundation::IInspectable const &value) const {
  bool __returnValue{};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
          ->RemoveFromCollection(
              get_abi(xamlDirectObject), get_abi(value), &__returnValue));
  return __returnValue;
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::
    RemoveFromCollectionAt(
        Windows::Foundation::IInspectable const &xamlDirectObject,
        uint32_t index) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->RemoveFromCollectionAt(get_abi(xamlDirectObject), index));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::ClearCollection(
    Windows::Foundation::IInspectable const &xamlDirectObject) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->ClearCollection(get_abi(xamlDirectObject)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::AddEventHandler(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const &eventIndex,
    Windows::Foundation::IInspectable const &handler,
    bool handledEventsToo) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->AddEventHandler1(
                        get_abi(xamlDirectObject),
                        get_abi(eventIndex),
                        get_abi(handler),
                        handledEventsToo));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::AddEventHandler(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const &eventIndex,
    Windows::Foundation::IInspectable const &handler) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->AddEventHandler2(
                        get_abi(xamlDirectObject),
                        get_abi(eventIndex),
                        get_abi(handler)));
}

template <typename D>
void consume_Microsoft_UI_Xaml_Core_Direct_IXamlDirect<D>::RemoveEventHandler(
    Windows::Foundation::IInspectable const &xamlDirectObject,
    Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const &eventIndex,
    Windows::Foundation::IInspectable const &handler) const {
  check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::IXamlDirect)
                    ->RemoveEventHandler(
                        get_abi(xamlDirectObject),
                        get_abi(eventIndex),
                        get_abi(handler)));
}

template <typename D>
Microsoft::UI::Xaml::Core::Direct::IXamlDirect
consume_Microsoft_UI_Xaml_Core_Direct___IXamlDirectStatics<D>::GetDefault()
    const {
  Microsoft::UI::Xaml::Core::Direct::IXamlDirect __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics)
          ->GetDefault(put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Microsoft::UI::Xaml::Core::Direct::IXamlDirect
consume_Microsoft_UI_Xaml_Core_Direct___IXamlDirectStatics<D>::GetWrapper()
    const {
  Microsoft::UI::Xaml::Core::Direct::IXamlDirect __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics)
          ->GetWrapper(put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
Microsoft::UI::Xaml::Core::Direct::IXamlDirect
consume_Microsoft_UI_Xaml_Core_Direct___IXamlDirectStatics<D>::GetCompat()
    const {
  Microsoft::UI::Xaml::Core::Direct::IXamlDirect __returnValue{nullptr};
  check_hresult(
      WINRT_SHIM(Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics)
          ->GetCompat(put_abi(__returnValue)));
  return __returnValue;
}

template <typename D>
struct produce<D, Microsoft::UI::Xaml::Core::Direct::IXamlDirect>
    : produce_base<D, Microsoft::UI::Xaml::Core::Direct::IXamlDirect> {
  int32_t WINRT_CALL
  get_IsXamlDirectEnabled(bool *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(IsXamlDirectEnabled, WINRT_WRAP(bool));
      *__returnValue = detach_from<bool>(this->shim().IsXamlDirectEnabled());
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL
  GetObject(void *xamlDirectObject, void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetObject,
          WINRT_WRAP(Windows::Foundation::IInspectable),
          Windows::Foundation::IInspectable const &);
      *__returnValue =
          detach_from<Windows::Foundation::IInspectable>(this->shim().GetObject(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL
  GetXamlDirectObject(void *object, void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetXamlDirectObject,
          WINRT_WRAP(Windows::Foundation::IInspectable),
          Windows::Foundation::IInspectable const &);
      *__returnValue = detach_from<Windows::Foundation::IInspectable>(
          this->shim().GetXamlDirectObject(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &object)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL CreateInstance(
      Microsoft::UI::Xaml::Core::Direct::XamlTypeIndex typeIndex,
      void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          CreateInstance,
          WINRT_WRAP(Windows::Foundation::IInspectable),
          Microsoft::UI::Xaml::Core::Direct::XamlTypeIndex const &);
      *__returnValue = detach_from<Windows::Foundation::IInspectable>(
          this->shim().CreateInstance(
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlTypeIndex const *>(
                  &typeIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetObjectProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      void *value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetObjectProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::IInspectable const &);
      this->shim().SetObjectProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetXamlDirectObjectProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      void *value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetXamlDirectObjectProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::IInspectable const &);
      this->shim().SetXamlDirectObjectProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetBooleanProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      bool value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetBooleanProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          bool);
      this->shim().SetBooleanProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          value);
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetDoubleProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      double value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetDoubleProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          double);
      this->shim().SetDoubleProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          value);
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetInt32Property(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      int32_t value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetInt32Property,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          int32_t);
      this->shim().SetInt32Property(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          value);
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetStringProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      void *value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetStringProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          hstring const &);
      this->shim().SetStringProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<hstring const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetDateTimeProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::DateTime value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetDateTimeProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::DateTime const &);
      this->shim().SetDateTimeProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::DateTime const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetPointProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::Point value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetPointProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::Point const &);
      this->shim().SetPointProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::Point const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetRectProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::Rect value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetRectProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::Rect const &);
      this->shim().SetRectProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::Rect const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetSizeProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::Size value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetSizeProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::Size const &);
      this->shim().SetSizeProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::Size const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetTimeSpanProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::TimeSpan value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetTimeSpanProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::Foundation::TimeSpan const &);
      this->shim().SetTimeSpanProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::Foundation::TimeSpan const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetColorProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Color value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetColorProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Color const &);
      this->shim().SetColorProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::UI::Color const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetCornerRadiusProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_CornerRadius value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetCornerRadiusProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Xaml::CornerRadius const &);
      this->shim().SetCornerRadiusProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::UI::Xaml::CornerRadius const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetDurationProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Duration value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetDurationProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Xaml::Duration const &);
      this->shim().SetDurationProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::UI::Xaml::Duration const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetGridLengthProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_GridLength value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetGridLengthProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Xaml::GridLength const &);
      this->shim().SetGridLengthProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::UI::Xaml::GridLength const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetThicknessProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Thickness value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetThicknessProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Xaml::Thickness const &);
      this->shim().SetThicknessProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::UI::Xaml::Thickness const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetMatrixProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Media_Matrix value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetMatrixProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Xaml::Media::Matrix const &);
      this->shim().SetMatrixProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<Windows::UI::Xaml::Media::Matrix const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetMatrix3DProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Media_Media3D_Matrix3D
          value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetMatrix3DProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          Windows::UI::Xaml::Media::Media3D::Matrix3D const &);
      this->shim().SetMatrix3DProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          *reinterpret_cast<
              Windows::UI::Xaml::Media::Media3D::Matrix3D const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL SetEnumProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      uint32_t value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          SetEnumProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &,
          uint32_t);
      this->shim().SetEnumProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex),
          value);
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetObjectProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetObjectProperty,
          WINRT_WRAP(Windows::Foundation::IInspectable),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::Foundation::IInspectable>(
          this->shim().GetObjectProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetXamlDirectObjectProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetXamlDirectObjectProperty,
          WINRT_WRAP(Windows::Foundation::IInspectable),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::Foundation::IInspectable>(
          this->shim().GetXamlDirectObjectProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetBooleanProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      bool *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetBooleanProperty,
          WINRT_WRAP(bool),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<bool>(this->shim().GetBooleanProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetDoubleProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      double *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetDoubleProperty,
          WINRT_WRAP(double),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<double>(this->shim().GetDoubleProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetInt32Property(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      int32_t *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetInt32Property,
          WINRT_WRAP(int32_t),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<int32_t>(this->shim().GetInt32Property(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetStringProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetStringProperty,
          WINRT_WRAP(hstring),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<hstring>(this->shim().GetStringProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetDateTimeProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::DateTime *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetDateTimeProperty,
          WINRT_WRAP(Windows::Foundation::DateTime),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::Foundation::DateTime>(
          this->shim().GetDateTimeProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetPointProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::Point *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetPointProperty,
          WINRT_WRAP(Windows::Foundation::Point),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue =
          detach_from<Windows::Foundation::Point>(this->shim().GetPointProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetRectProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::Rect *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetRectProperty,
          WINRT_WRAP(Windows::Foundation::Rect),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue =
          detach_from<Windows::Foundation::Rect>(this->shim().GetRectProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetSizeProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::Size *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetSizeProperty,
          WINRT_WRAP(Windows::Foundation::Size),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue =
          detach_from<Windows::Foundation::Size>(this->shim().GetSizeProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetTimeSpanProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      Windows::Foundation::TimeSpan *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetTimeSpanProperty,
          WINRT_WRAP(Windows::Foundation::TimeSpan),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::Foundation::TimeSpan>(
          this->shim().GetTimeSpanProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetColorProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Color *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetColorProperty,
          WINRT_WRAP(Windows::UI::Color),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue =
          detach_from<Windows::UI::Color>(this->shim().GetColorProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetCornerRadiusProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_CornerRadius
          *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetCornerRadiusProperty,
          WINRT_WRAP(Windows::UI::Xaml::CornerRadius),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::UI::Xaml::CornerRadius>(
          this->shim().GetCornerRadiusProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetDurationProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Duration *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetDurationProperty,
          WINRT_WRAP(Windows::UI::Xaml::Duration),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::UI::Xaml::Duration>(
          this->shim().GetDurationProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetGridLengthProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_GridLength *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetGridLengthProperty,
          WINRT_WRAP(Windows::UI::Xaml::GridLength),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::UI::Xaml::GridLength>(
          this->shim().GetGridLengthProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetThicknessProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Thickness *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetThicknessProperty,
          WINRT_WRAP(Windows::UI::Xaml::Thickness),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::UI::Xaml::Thickness>(
          this->shim().GetThicknessProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetMatrixProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Media_Matrix
          *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetMatrixProperty,
          WINRT_WRAP(Windows::UI::Xaml::Media::Matrix),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::UI::Xaml::Media::Matrix>(
          this->shim().GetMatrixProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetMatrix3DProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      struct struct_Windows_UI_Xaml_Media_Media3D_Matrix3D
          *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetMatrix3DProperty,
          WINRT_WRAP(Windows::UI::Xaml::Media::Media3D::Matrix3D),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<Windows::UI::Xaml::Media::Media3D::Matrix3D>(
          this->shim().GetMatrix3DProperty(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              *reinterpret_cast<
                  Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
                  &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetEnumProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex propertyIndex,
      uint32_t *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetEnumProperty,
          WINRT_WRAP(uint32_t),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      *__returnValue = detach_from<uint32_t>(this->shim().GetEnumProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL ClearProperty(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex
          propertyIndex) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          ClearProperty,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const &);
      this->shim().ClearProperty(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlPropertyIndex const *>(
              &propertyIndex));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetCollectionCount(
      void *xamlDirectObject,
      uint32_t *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetCollectionCount,
          WINRT_WRAP(uint32_t),
          Windows::Foundation::IInspectable const &);
      *__returnValue = detach_from<uint32_t>(this->shim().GetCollectionCount(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetXamlDirectObjectFromCollectionAt(
      void *xamlDirectObject,
      uint32_t index,
      void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetXamlDirectObjectFromCollectionAt,
          WINRT_WRAP(Windows::Foundation::IInspectable),
          Windows::Foundation::IInspectable const &,
          uint32_t);
      *__returnValue = detach_from<Windows::Foundation::IInspectable>(
          this->shim().GetXamlDirectObjectFromCollectionAt(
              *reinterpret_cast<Windows::Foundation::IInspectable const *>(
                  &xamlDirectObject),
              index));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL
  AddToCollection(void *xamlDirectObject, void *value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          AddToCollection,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Windows::Foundation::IInspectable const &);
      this->shim().AddToCollection(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL InsertIntoCollectionAt(
      void *xamlDirectObject,
      uint32_t index,
      void *value) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          InsertIntoCollectionAt,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          uint32_t,
          Windows::Foundation::IInspectable const &);
      this->shim().InsertIntoCollectionAt(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          index,
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(&value));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL RemoveFromCollection(
      void *xamlDirectObject,
      void *value,
      bool *__returnValue) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          RemoveFromCollection,
          WINRT_WRAP(bool),
          Windows::Foundation::IInspectable const &,
          Windows::Foundation::IInspectable const &);
      *__returnValue = detach_from<bool>(this->shim().RemoveFromCollection(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &value)));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL RemoveFromCollectionAt(
      void *xamlDirectObject,
      uint32_t index) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          RemoveFromCollectionAt,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          uint32_t);
      this->shim().RemoveFromCollectionAt(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          index);
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL ClearCollection(void *xamlDirectObject) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          ClearCollection,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &);
      this->shim().ClearCollection(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL AddEventHandler1(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlEventIndex eventIndex,
      void *handler,
      bool handledEventsToo) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          AddEventHandler,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const &,
          Windows::Foundation::IInspectable const &,
          bool);
      this->shim().AddEventHandler(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const *>(
              &eventIndex),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &handler),
          handledEventsToo);
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL AddEventHandler2(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlEventIndex eventIndex,
      void *handler) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          AddEventHandler,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const &,
          Windows::Foundation::IInspectable const &);
      this->shim().AddEventHandler(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const *>(
              &eventIndex),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &handler));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL RemoveEventHandler(
      void *xamlDirectObject,
      Microsoft::UI::Xaml::Core::Direct::XamlEventIndex eventIndex,
      void *handler) noexcept final {
    try {
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          RemoveEventHandler,
          WINRT_WRAP(void),
          Windows::Foundation::IInspectable const &,
          Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const &,
          Windows::Foundation::IInspectable const &);
      this->shim().RemoveEventHandler(
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &xamlDirectObject),
          *reinterpret_cast<
              Microsoft::UI::Xaml::Core::Direct::XamlEventIndex const *>(
              &eventIndex),
          *reinterpret_cast<Windows::Foundation::IInspectable const *>(
              &handler));
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }
};

template <typename D>
struct produce<
    D,
    Microsoft::UI::Xaml::Core::Direct::__IXamlDirectPublicNonVirtuals>
    : produce_base<
          D,
          Microsoft::UI::Xaml::Core::Direct::__IXamlDirectPublicNonVirtuals> {};

template <typename D>
struct produce<D, Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics>
    : produce_base<D, Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics> {
  int32_t WINRT_CALL GetDefault(void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetDefault,
          WINRT_WRAP(Microsoft::UI::Xaml::Core::Direct::IXamlDirect));
      *__returnValue =
          detach_from<Microsoft::UI::Xaml::Core::Direct::IXamlDirect>(
              this->shim().GetDefault());
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetWrapper(void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetWrapper,
          WINRT_WRAP(Microsoft::UI::Xaml::Core::Direct::IXamlDirect));
      *__returnValue =
          detach_from<Microsoft::UI::Xaml::Core::Direct::IXamlDirect>(
              this->shim().GetWrapper());
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }

  int32_t WINRT_CALL GetCompat(void **__returnValue) noexcept final {
    try {
      *__returnValue = nullptr;
      typename D::abi_guard guard(this->shim());
      WINRT_ASSERT_DECLARATION(
          GetCompat,
          WINRT_WRAP(Microsoft::UI::Xaml::Core::Direct::IXamlDirect));
      *__returnValue =
          detach_from<Microsoft::UI::Xaml::Core::Direct::IXamlDirect>(
              this->shim().GetCompat());
      return 0;
    } catch (...) {
      return to_hresult();
    }
  }
};

} // namespace winrt::impl

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Core::Direct {
  inline Microsoft::UI::Xaml::Core::Direct::IXamlDirect
  XamlDirect::GetDefault() {
    return impl::call_factory<
        XamlDirect,
        Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics>(
        [&](auto &&f) { return f.GetDefault(); });
  }

  inline Microsoft::UI::Xaml::Core::Direct::IXamlDirect
  XamlDirect::GetWrapper() {
    return impl::call_factory<
        XamlDirect,
        Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics>(
        [&](auto &&f) { return f.GetWrapper(); });
  }

  inline Microsoft::UI::Xaml::Core::Direct::IXamlDirect
  XamlDirect::GetCompat() {
    return impl::call_factory<
        XamlDirect,
        Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics>(
        [&](auto &&f) { return f.GetCompat(); });
  }
}

WINRT_EXPORT namespace std {
  template <>
  struct hash<winrt::Microsoft::UI::Xaml::Core::Direct::IXamlDirect>
      : winrt::impl::hash_base<
            winrt::Microsoft::UI::Xaml::Core::Direct::IXamlDirect> {};
  template <>
  struct hash<
      winrt::Microsoft::UI::Xaml::Core::Direct::__IXamlDirectPublicNonVirtuals>
      : winrt::impl::hash_base<winrt::Microsoft::UI::Xaml::Core::Direct::
                                   __IXamlDirectPublicNonVirtuals> {};
  template <>
  struct hash<winrt::Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics>
      : winrt::impl::hash_base<
            winrt::Microsoft::UI::Xaml::Core::Direct::__IXamlDirectStatics> {};
  template <>
  struct hash<winrt::Microsoft::UI::Xaml::Core::Direct::XamlDirect>
      : winrt::impl::hash_base<
            winrt::Microsoft::UI::Xaml::Core::Direct::XamlDirect> {};
}
